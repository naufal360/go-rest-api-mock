definitions:
  models.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: integer
    type: object
  models.User:
    properties:
      admin:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      password:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get details of all products
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get all products data
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Post details of product corresponding to the input Id
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: create products
        in: body
        name: models.Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
      summary: Post a new product data
      tags:
      - products
  /products/{productId}:
    delete:
      consumes:
      - application/json
      description: Delete details of product corresponding to the input Id
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                message:
                  type: string
              type: object
      summary: Update products data by admin
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get details of product corresponding to the input Id
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get product data for a given Id
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update details of product corresponding to the input Id
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      - description: update product
        in: body
        name: models.Product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Update products data by admin
      tags:
      - products
  /users/login:
    post:
      consumes:
      - application/json
      description: Post details of users corresponding to the input Id
      parameters:
      - description: login users
        in: body
        name: models.User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                token:
                  type: string
              type: object
      summary: Post a login users data
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Post details of users corresponding to the input Id
      parameters:
      - description: create users
        in: body
        name: models.User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Post a new users data
      tags:
      - users
swagger: "2.0"
